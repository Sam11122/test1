{"version":3,"sources":["serviceWorker.js","components/navbar.jsx","components/OutlinedText.jsx","components/Buttons.jsx","components/App1.jsx","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","props","react_default","a","createElement","AppBar","position","Toolbar","Typography","variant","color","output","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","TextFields","classes","className","noValidate","autoComplete","TextField","id","label","onChange","margin","autoFocus","button","input","Buttons","Button","onClick","onPlus1","onMinus1","onPlusInput","onMinusInput","App1","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","console","log","target","value","i","Number","setState","handlePlusInput","state","data","points","length","y","arr","toConsumableArray","ar1","pts","lastEntry","push","xx","x","yy","handleMinusInput","handlePlus1","handleMinus1","navbar","OutlinedText","style","bundle_default","height","xLabel","yLabel","Component","ReactDOM","render","components_App1","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7ce6c5bd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst NavBar = props => {\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"title\" color=\"inherit\">\r\n            Output: {props.output}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\"\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  dense: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  menu: {\r\n    width: 200\r\n  }\r\n}));\r\nfunction TextFields(props) {\r\n  const classes = useStyles();\r\n\r\n  //const handleChange = name => event => {\r\n  //setValues({ ...values, [name]: event.target.value });\r\n  //};\r\n\r\n  return (\r\n    <div>\r\n      <form className={classes.container} noValidate autoComplete=\"off\">\r\n        <TextField\r\n          id=\"outlined-name\"\r\n          label={\"Enter an integer:\"}\r\n          className={classes.textField}\r\n          onChange={props.onChange}\r\n          margin=\"normal\"\r\n          autoFocus={true}\r\n          variant=\"outlined\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextFields;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1)\r\n  },\r\n  input: {\r\n    display: \"none\"\r\n  }\r\n}));\r\n\r\nexport default function Buttons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={props.onPlus1}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n      >\r\n        +1\r\n      </Button>\r\n      <Button\r\n        onClick={props.onMinus1}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        -1\r\n      </Button>\r\n      <Button\r\n        onClick={props.onPlusInput}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.button}\r\n      >\r\n        +Input\r\n      </Button>\r\n      <Button\r\n        onClick={props.onMinusInput}\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        className={classes.button}\r\n      >\r\n        -Input\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./navbar\";\r\nimport TextFields from \"./OutlinedText\";\r\nimport Buttons from \"./Buttons\";\r\nimport LineChart from \"react-linechart\";\r\n\r\nclass App1 extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      input: 0,\r\n      data: [\r\n        {\r\n          color: \"steelblue\",\r\n          points: [{ x: 0, y: 0 }]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  handleChange = event => {\r\n    console.log(event.target.value);\r\n    let i = Number(event.target.value);\r\n\r\n    this.setState({ input: i });\r\n  };\r\n\r\n  handlePlusInput = () => {\r\n    let i = Number(\r\n      this.state.data[0].points[this.state.data[0].points.length - 1].y +\r\n        this.state.input\r\n    );\r\n\r\n    let arr = [...this.state.data];\r\n    let ar1 = arr[0];\r\n    let pts = ar1.points;\r\n    let lastEntry = pts[pts.length - 1];\r\n    pts.push(lastEntry);\r\n    let xx = lastEntry.x + 1;\r\n    let yy = i;\r\n    pts.push({ x: xx, y: yy });\r\n    ar1.points = pts;\r\n    arr[0] = ar1;\r\n\r\n    this.setState({ data: arr });\r\n  };\r\n\r\n  handleMinusInput = () => {\r\n    let i = Number(\r\n      this.state.data[0].points[this.state.data[0].points.length - 1].y -\r\n        this.state.input\r\n    );\r\n\r\n    let arr = [...this.state.data];\r\n    let ar1 = arr[0];\r\n    let pts = ar1.points;\r\n    let lastEntry = pts[pts.length - 1];\r\n    pts.push(lastEntry);\r\n    let xx = lastEntry.x + 1;\r\n    let yy = i;\r\n    pts.push({ x: xx, y: yy });\r\n    ar1.points = pts;\r\n    arr[0] = ar1;\r\n\r\n    this.setState({ data: arr });\r\n  };\r\n\r\n  handlePlus1 = () => {\r\n    let arr = [...this.state.data];\r\n    let ar1 = arr[0];\r\n    let pts = ar1.points;\r\n    let lastEntry = pts[pts.length - 1];\r\n    pts.push(lastEntry);\r\n    let xx = lastEntry.x + 1;\r\n    let yy = lastEntry.y + 1;\r\n    pts.push({ x: xx, y: yy });\r\n    ar1.points = pts;\r\n    arr[0] = ar1;\r\n\r\n    this.setState({ data: arr });\r\n  };\r\n\r\n  handleMinus1 = () => {\r\n    console.log(\r\n      \"x=\" + this.state.data[0].points[this.state.data[0].points.length - 1].x\r\n    );\r\n    console.log(\r\n      \"y=\" + this.state.data[0].points[this.state.data[0].points.length - 1].y\r\n    );\r\n\r\n    let arr = [...this.state.data];\r\n    let ar1 = arr[0];\r\n    let pts = ar1.points;\r\n    let lastEntry = pts[pts.length - 1];\r\n    pts.push(lastEntry);\r\n    let xx = lastEntry.x + 1;\r\n    let yy = lastEntry.y - 1;\r\n    pts.push({ x: xx, y: yy });\r\n    ar1.points = pts;\r\n    arr[0] = ar1;\r\n\r\n    this.setState({ data: arr });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar\r\n          output={\r\n            this.state.data[0].points[this.state.data[0].points.length - 1].y\r\n          }\r\n        />\r\n        <br />\r\n\r\n        <br />\r\n        <TextFields onChange={this.handleChange} />\r\n        <br />\r\n        <Buttons\r\n          onPlus1={this.handlePlus1}\r\n          onMinus1={this.handleMinus1}\r\n          onPlusInput={this.handlePlusInput}\r\n          onMinusInput={this.handleMinusInput}\r\n        />\r\n\r\n        <h3 style={{ color: \"steelblue\" }}>Clicks vs Count </h3>\r\n        <LineChart\r\n          width={\r\n            this.state.data[0].points[this.state.data[0].points.length - 1].x >\r\n            24\r\n              ? 500\r\n              : 300\r\n          }\r\n          height={\r\n            this.state.data[0].points[this.state.data[0].points.length - 1].x >\r\n            24\r\n              ? 500\r\n              : 300\r\n          }\r\n          data={this.state.data}\r\n          xLabel=\"Clicks\"\r\n          yLabel=\"Count\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App1;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App1 from \"./components/App1\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App1 />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}